.pieChart {
    width: auto;
    height: 440px;
}

.main-profile {
    height: 50%;
    width: auto;
}

.card-profile-title {
    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
    font-size: larger;
}

.main-profile-footer {
    border-top: none !important;
}

.card-votes {
    height: 440px;
    width: auto;
}

.card-empty {
    height: 440px;
    width: auto;
}

.card-trending {
    height: 440px;
    width: auto;
}

.card_dashboard {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}


.max-weight-name {
    max-width: 70%;
}

.loql {
    max-width: 66%;
}

.lower-text {
    max-width: 60%;
}

li.trending {
    list-style-type: none;
}

li.skills {
    list-style-type: none;
    overflow: auto;
}

/* .upper-text {
    max-width: 100%;
} */

.card-hf-color-dasboard {
    background-color: white !important;
    border-top: none !important;
}

.header-custom {
    background-color: white !important;
    border-top: none !important;
    border-bottom: none !important;
}

.fsxxl {
    font-size: x-large;
}

.fssm {
    font-size: x-large;
}

.card-text-lol {
    font-size: 1.8rem;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

.lool {
    max-width: 70%;
}

/* import React from "react";
import Chart from "react-google-charts";
import PropTypes from "prop-types";
import Card from "react-bootstrap/Card";
import './DashBoard.css'
import {SvgIcon} from "../../../common/SvgIcon";
import { Doughnut } from "react-chartjs-2";
import backend from "../../../env";
import axios from "axios";
import Odal from "./mymodal";

function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  }
class DashBoard extends React.Component {
    static propTypes = {
        created: PropTypes.arrayOf(PropTypes.string).isRequired,
        downvote:PropTypes.number.isRequired,
        git:PropTypes.string.isRequired,
        linkedin:PropTypes.string.isRequired,
        name:PropTypes.string.isRequired,
        onDelete: PropTypes.func.isRequired,
        skills: PropTypes.arrayOf(PropTypes.string).isRequired,
        upvote: PropTypes.number.isRequired,
    }

    constructor(props) {
        super(props);
        this.handleTrending()
        this.state={
            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            trendingSkills:[],
            dataDoughnut: {
            labels: ["Up Votes","Down Votes"],
            datasets: [
                {
                    data: [0+props.upvote,0+props.downvote],
                    backgroundColor: ["#F7464A", "#46BFBD"],
                    hoverBackgroundColor: [
                        "#FF5A5E",
                        "#5AD3D1",
                        ]
                    }
                ]
            }
        }
    }

    shouldComponentUpdate () {
        return true;
    }

    handleTrending() {
        axios.get(backend+"connect/statistics/skills").then((res) => {this.setState({trendingSkills:res.data})})
    }

    handleDoughnut () {
        if (this.props.upvote > 0 || this.props.downvote>0){
            return(
                <Doughnut
                    data={this.state.dataDoughnut}
                    height={10}
                    options={{ responsive: true, maintainAspectRatio: true}}
                    width={10}
                />
            )
        }
        else{
            return (
                <div>
                    first work bro
                </div>
            )
        }
    }

    render () {
        console.log(this.props.created)
        return (
            <div className="">
                <h1 className="font-weight-bold">
                    <span className="material-icons pr-2">
                        dashboard
                    </span>
                    Dashboard
                </h1>

                <div className="container-fluid loql">
                    <div>
                        <div>
                            <Card className="mb-5 upper-text main-profile">
                                <Card.Body className="row">
                                    <div className="col-md-8 float-center">
                                        <h1 className="card-title fw-bold mt-3 ml-3 row ">
                                            {this.props.name}
                                        </h1>

                                        <div className="card-text col-auto row mt-5 float-left">

                                            <p className="ml-5 blockquote">
                                                Your time is limited, so dont waste it living someone elses life. Dont
                                                be trapped by dogma â€“ which is living with the results of other peoples
                                                thinking. -Steve Jobs
                                            </p>
                                        </div>                                     
                                    </div>

                                    <div className="col-md-4 pt-4">
                                        <img
                                            alt="profile_pic"
                                            className="rounded-circle float-center"
                                            src="https://mdbootstrap.com/img/Photos/Avatars/img%20(30).jpg"
                                        />
                                    </div>

                                </Card.Body>

                                <Card.Footer className="mb-0 mt-3 card-hf-color-dasboard">
                                    <Card.Link
                                        className="float-left ml-2 mb-0"
                                        href={"https://www.linkedin.com/in/"+ this.props.linkedin}
                                        target="_blank"
                                    >
                                        <SvgIcon
                                            height="31px"
                                            src="linkedin.svg"
                                            width="44px"
                                        />
                                    </Card.Link>

                                    <Card.Link
                                        className="float-left"
                                        href={"https://www.github.com/"+ this.props.git}
                                        target="_blank"
                                    >
                                        <SvgIcon
                                            height="34px"
                                            src="github.svg"
                                            width="43px"
                                        />
                                    </Card.Link>

                                    <h4 className="card-text float-right">
                                        <small className="text-muted">
                                            {"- Since  "}

                                            {this.props.created.slice(8,10) + "th "}

                                            {this.state.months[parseInt(this.props.created.slice(5,7))] + ", "}

                                            {" "}

                                            {this.props.created.slice(0,4)}

                                        </small>
                                    </h4>   
                                </Card.Footer>
                            </Card>
                        </div>
                    </div>

                    <div className="row">
                        <div className="col">
                            <Card className="card_dashboard m-2 card card-trending">
                                <Card.Header className="h1 header-custom">
                                    Skills
                                </Card.Header>
                                
                                <Card.Body className="container">
                                    <div className="pieChart hello">
                                        <Chart
                                            chartType="PieChart"
                                            data={[
                                                    ["hello", 'Percentage covered'],
                                                    [this.props.skills[0], 53],
                                                    [this.props.skills[1], 83],
                                                ]}
                                            height='21rem'
                                            loader={
                                                <div>
                                                    Loading Chart
                                                </div>
                                                }
                                            options={{
                                                    // title: 'Work Summary',
                                                    legend: 'none',
                                                    pieSliceText: 'label',
                                                    slices: {
                                                    // 1: { offset: 0.2 },
                                                    // 2: { offset: 0.3 },
                                                    2: { offset: 0.2 },
                                                    },
                                                }}
                                            rootProps={{ 'data-testid': '5' }}
                                            width='auto'
                                        />
                                    </div>
                                </Card.Body>
                            </Card>
                        </div>

                        <div className="col">
                            <Card className="card_dashboard m-2 card card-trending">
                                <Card.Header className="h1 header-custom">
                                    Trending Skills
                                </Card.Header>

                                <Card.Body className="card-body col-md-12">
                                    

                                    {this.state.trendingSkills.map(item => (
                                        <div
                                            className="col-auto"
                                            key={item}
                                        >
                                            <ol 
                                                className="list-group mt-1"
                                                key={item}
                                            >
                                                <li className="d-flex justify-content-between align-items-start fsxxl container-fluid">
                                                    <div className="ms-2 me-auto">
                                                        <div className="fs-1">
                                                            {capitalizeFirstLetter(item["name"])}
                                                        </div>
                                                    </div>

                                                    <span className="badge rounded-pill">
                                                        <span >
                                                            <SvgIcon
                                                                height="34px"
                                                                src="trending_up_black_48dp.svg"
                                                                width="43px"
                                                            />
                                                        </span>

                                                        {item["count"]}
                                                    </span>
                                                </li>
                                            </ol>
                                        </div>
                                        ))}
                                </Card.Body>

                                <Card.Footer className="header-custom">
                                    <span className="fssm">
                                        Lorem Ipsium
                                    </span>
                                </Card.Footer>
                            </Card>
                        </div>
                    </div>

                    <div className="row">
                        <div className="col">
                            <Card className="card_dashboard m-2 card card-empty">
                                <Card.Body>
                                    <Card.Title>
                                        Your Skills
                                    </Card.Title>

                                    <div>
                                        {this.props.skills.map(item => (
                                            <div
                                                className="col-auto"
                                                key={item}
                                            >
                                                <li
                                                    className="skills"
                                                    key={item}
                                                >
                                                    <ol className="">
                                                        {item}

                                                        <Odal
                                                            item={item}
                                                            onDelete={this.props.onDelete}
                                                        />
                                                    </ol>
                                                </li>
                                            </div>
                                        ))}
                                    </div>
                                </Card.Body>
                            </Card>
                        </div>

                        <div className="col">
                            <Card className="card_dashboard m-2 card card-votes">
                                <Card.Body className="card-body col-md-7">

                                    {this.handleDoughnut()}

                                </Card.Body>

                            </Card>
                        </div>
                    </div>
                </div>
            </div>
        );
    }
}

export default DashBoard;
 */